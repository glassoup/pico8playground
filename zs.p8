pico-8 cartridge // http://www.pico-8.com
version 34
__lua__
-- variables

function _init()
 -- never repeat for btnp
 poke(0x5f5c, 255)
 
 --vars
 player={
  rot=0,
  x=0,
  y=50,
  dx=0,
  dy=0,
 }
 -- player
	drot=0.0165
	lock_e={x=0,y=0}
	player_locked=false
	player_shooting=false
	shoot_delay=4 
	shoot_delay_cur=0
	friction=0.9
	friction_locked=0.82
	boost_nocharge=0
	boost_nocharge_amt=30
	boost_hold=false
	boost_invul=15
	boost_invul_cur=0
	boost_burst=8.5
	boost_amt=0.15
	boost_cur=0
	boost_max=0.8
	thrust_amt=0.1
	thrust_cur=0
	thrust_max=0.5
	thrust_on=false
	energy=100
	energy_max=100
	player_bullets={}
	health=50
	health_max=50
	shield=25
	shield_max=25
	shield_nocharge=0
	shield_penalty=4
	shield_penalty_min=4
	shield_penalty_max=10
	shield_fullcharge=false
	shield_nocharge_amt=30
	special_1_charge=0
	special_2_charge=0
	special_3_charge=0
	special_1_charge_max=20
	special_2_charge_max=30
	special_3_charge_max=40
	special_1=0
	special_2=0
	special_3=0
	special_1_max=3
	special_2_max=2
	special_3_max=1
	special_hold_dur=0
	special_1s={}
	special_2s={}
	special_3s={}
	
 lazer_cd=0
 boss_stall={
  atk="stall",
  dur=180,
  init=function (_) dur=180 end,
  draw=function (_) end,
  hit =function (_) end
 }

 boss_attack={
  {atk="lazer",
  dur=250,
  init=function (self)
   self.dur=250
  end,
  draw=
	  function (self)
	   local d = self.dur
	   if d<180 then
	    local s00,s25,s50,s75=sin(d/180),sin(d/180+0.25),sin(d/180+0.5),sin(d/180+0.75)
	    for i=-3,3 do
	     local c=8
	     if i<2 and i>-2 then c=7 end
		    line(s00*(181)+s75*i, -s75*181+s00*i,s50*181-s25*i,-s25*181-s50*i,c)
		    line(s25*181+s00*i,-s00*181+s25*i,s75*181-s50*i,-s50*181-s75*i,c)
	    end
	   else
	    fillp(▒)
	    for i=-3,3 do
		    line(181,0-i,-181,0-i,8)
		    line(0-i,181,0-i,-181,8)
	    end
	    fillp()
	   end
	  end,
  hit=
	  function (self)
	   local d = self.dur
	  	lazer_cd=max(lazer_cd-1,0)
	   if d<180 then
	    local a1,b1=sin(d/180)-sin(d/180+0.5),-cos(d/180)+cos(d/180+0.5)
	    local a2,b2=sin(d/180+0.25)-sin(d/180+0.75),-cos(d/180+0.25)+cos(d/180+0.75)
	    
	    if (abs(a1*player.x+b1*player.y)/sqrt(a1^2+b1^2) <= 5
	    or abs(a2*player.x+b2*player.y)/sqrt(a2^2+b2^2) <= 5)
					and lazer_cd<=0 then
						player_damage(15)
						lazer_cd=10
	    end	   
	   end
	  end
  },
  {atk="spawn enemies",
  dur=250,
  init=function (self)
   self.dur=flr(rnd(250))
  end,
  draw=function (_) end,
  hit=
	  function (self)
	   if self.dur%50==0 then
	    local rnd_r=rnd(4)+5
 				add(enemies,{
				  x=0,
				  y=0,
				  dx=0,
				  dy=0,
				  r=rnd_r,
				  t="chase",
				  health=12+rnd_r,
				  health_max=12+rnd_r,
				 })
				end
	  end
  },
  {atk="sector",
  dur=80,
  dur_max=80,
  sectors={},
  init=function (self)
   self.sectors={}
   self.dur=self.dur_max
   for i=0,4 do
    add(self.sectors,rnd())
   end
  end,
  draw=
	  function (self)
	   if self.dur<10 then
	    for sec in all(self.sectors) do
		    i=sec
		    while i<sec+0.125 do
			    line(sin(i)*181,-cos(i)*181,0,0,7)
		     i+=0.005
		    end
	    end
	   else 
	    fillp(▒)
	    local c=8
	    if (self.dur<30) c=9
	    for sec in all(self.sectors) do
		    i=sec
		    while i<sec+0.125 do
			    line(sin(i)*181,-cos(i)*181,0,0,c)
		     i+=0.01
		    end
	    end
	    fillp()
	   end
	  end,
	  hit=
	  function (self)
	   if self.dur==5 then
					for sec in all(self.sectors) do
					 local sec_end={
					  x=sin(sec),
					  y=-cos(sec)
					 }
					 local sec_start={
					  x=sin(sec+0.125),
					  y=-cos(sec+0.125)
					 }
						if (not isclockwise(sec_start,player)) and isclockwise(sec_end,player) then
							player_damage(25)
							return
					 end
					end
	   end
	  end
  },
 }
 boss_attack[3].init(boss_attack[3])
 boss={
  x=0,
  y=0,
  r=10,
  t="boss",
  health=2500,
  health_max=2500,
  stage=3,
  stage_max=3,
  attack={}
 }
 enemies={
  boss
 }
 
 arena_cd=0
 particles={}
 
 -- arena
 arena_lines={}
 for i=1,20 do
  add(arena_lines,{rnd(362)-181,rnd(362)-181,rnd(362)-181,rnd(362)-181})
 end
 
 -- camera
 cam_x=player.x
 cam_y=player.y
 
 _init_debugger()
end
-->8
-- update && draw

function _update60()
 player_update()
 enemy_update()
 
 --camera
 cam_x=player.x-64+(8/2)
 cam_y=player.y-64+(8/2)
 camera(cam_x,cam_y)
end

function _draw()
 cls()
 
 -- stars
 local fcx,fcy=flr(cam_x),flr(cam_y)
 fillp(65534)
 for l in all(arena_lines) do
  line(fcx+l[2],fcy+l[1],fcx+l[4],fcy+l[3],1)
 end
 fillp()
 
 arena_draw()
 particle_draw()
 enemy_draw()
 player_bullet_draw()
 player_draw()
 _draw_debugger()
 ui_draw()
end
-->8
-- player

function player_update()
 local rot_target=input_rot_target()
 local rot_diff=(rot_target-player.rot+0.5)%1-0.5	
 local player_particlex=player.x-sin(player.rot)*5
 local player_particley=player.y+cos(player.rot)*5

 if player_locked then
	 player.dy*=friction_locked
	 player.dx*=friction_locked
  player.rot=0.25+atan2(player.x-lock_e.x, player.y-lock_e.y)
 else
 	player.dy*=friction
 	player.dx*=friction
 end
 
 -- boosting
 if input_boostp() or (boost_hold and input_boost()) then
  if rot_target == 0 then
   player.dx=0
   player.dy=0
   sfx(0)
   boost_hold=true
  else
   if energy >= 20 then
    player.dx=sin(rot_target)*boost_burst
    player.dy=cos(rot_target)*boost_burst
    boost_hold=false
    boost_invul_cur=boost_invul
    sfx(1)
    particle_create(player_particlex,player_particley,9,5,10)
    particle_create(player_particlex,player_particley,10,5,10)
    particle_create(player_particlex,player_particley,8,5,10)

    player_energy_nocharge(20)
   end 
  end
 else
  player_boost_hold=false
 end   
  	  
 
 if input_moving() then
  -- rotation
  if not player_locked then
   if abs(rot_diff) < drot then
		  player.rot=rot_target
		 elseif rot_diff > 0 then
		  player.rot+=drot
		 elseif rot_diff < 0 then
		  player.rot-=drot
		 end
	 	player.rot=player.rot%1
	 end
	   
	 -- thrust
  if (abs(rot_diff) < 0.175) or player_locked then
   local dir = player.rot
   if (player_locked) dir=rot_target
    
   if input_boost() and energy>0 then
    boost_cur+=boost_amt
  	 boost_cur=min(boost_max,boost_cur)
  	 player.dx+=boost_cur*sin(dir)
  	 player.dy+=boost_cur*cos(dir)
    particle_create(player_particlex,player_particley,8,3,4)
    particle_create(player_particlex,player_particley,9,3,4)
    particle_create(player_particlex,player_particley,10,3,4)
    sfx(2)
    if not (boost_invul_cur > 0) then
     player_energy_nocharge(1)
    end
   else
	   thrust_cur+=thrust_amt
	   thrust_cur=min(thrust_max,thrust_cur)
	   player.dx+=thrust_cur*sin(dir)
	   player.dy+=thrust_cur*cos(dir)
    particle_create(player_particlex,player_particley,8,2,2)
    particle_create(player_particlex,player_particley,9,2,3)
    particle_create(player_particlex,player_particley,10,2,3)
   end
   if not thrust_on then
    sfx(3)
    thrust_on=true
   end
  else
   thrust_on=false
  end
 else
  -- not pressing directional keys
  thrust_cur=0
  boost_cur=0
  thrust_on=false
 end
 	
 
 -- shooting
 if input_shoot() then
  if input_shootp() then
   player_shooting=not player_shooting
  end
  if player_shooting then
   if energy>=2 then
    player_lock()
    shoot_delay_cur+=1
	   shoot_delay_cur=shoot_delay_cur%shoot_delay  
    if shoot_delay_cur==0 then
	    player_shoot()
	    sfx(4)
	    player_energy_nocharge(2)
    end
   end
  else
   player_lock()
   -- special
   special_hold_dur+=0.25
   if special_hold_dur<41 then
   	sfx(8,2,special_hold_dur,1)
   elseif special_hold_dur<61 then
   	sfx(11,2,1,1)
   else
   	sfx(8,2,1,2)
   end
  end
 else
  shoot_delay_cur=0
  if special_hold_dur > 21 then
   if special_hold_dur<41 then
	   if special_1 > 0 then
	    special_1-=1
	    special_1_create()
	   else
	    sfx(11,2,3,0)
	   end
	  elseif special_hold_dur<61 then
	   if special_2 > 0 then
	    special_2-=1
	    special_2_create()
	    -- sfx(12,3,0,14)
	   else
	    sfx(11,2,2,0)
	   end
	  else
	   if special_3>0 then
	   special_3_activate()
	   special_3-=1
	   sfx(13)
	  	end
	  end
  elseif special_hold_dur > 0 then
   sfx(11)
  end
  special_hold_dur=0
  player_locked=false
 end
 
 -- special_2
 for s in all(special_2s) do
  check_special_2(s,player_bullets)
  check_special_2(s,special_1s)
  check_special_2(s,special_3s)

  s.dur-=1
  if (s.dur<0) del(special_2s,s)
	end
	function check_special_2(s,arr)
  for b in all(arr) do
	  local relpoint={
	   x=b.x-s.x,
	   y=b.y-s.y
	  }
		 if isinrange(relpoint,16) then
    b.mag=2
 	 end
 	end
 end
 
 -- bullets
 function projectile_update(arr, size, spd, sound_del, sound_mv, dmg, spcharge)
	 for b in all(arr) do
  
	  local c = 7
	  if (b.mag==2) c=8
	  b.x+=sin(b.rot)*spd
	  b.y-=cos(b.rot)*spd
	  local x,y=b.x,b.y
	  if (b.t=="special_3") then
	  	particle_precise_create(x,y,c,size)
	  else
	   particle_create(x,y,c,2,size)
	  end
	  if x < -350 or x > 350 or  y < -350 or y > 350 then
	   del(arr,b)
	  end
	  del(special_3s, b) -- don't remove special

	  if sound_mv > 0 and isinrange({x=x-player.x,y=y-player.y},100) then
	   sfx(sound_mv,1,0,2)
	  end
	  for e in all(enemies) do
	   local relpoint={
		   x=x-e.x,
		   y=y-e.y
		  }
		  if isinrange(relpoint,e.r+size-1) then
		   if not b.t== "special_3" then
		    particle_create(x,y,c,5,size)
		   end
		   sfx(sound_del)
		   del(player_bullets, b) -- don't remove special

		   enemy_damage(e,dmg*b.mag)
		   player_add_special(spcharge*b.mag)
		  end
		 end
	 end
	end
 projectile_update(player_bullets, 1, 5.5, 5, 0, 2, 0.4)
 projectile_update(special_1s,     4, 1.5, 5, 9, 5, 0.4)
 projectile_update(special_3s,    42,   0, 5, 9,85, 2)

 
 --misc
 if boost_nocharge <= 0 then
  energy=min(energy+3,energy_max)
 end
 boost_nocharge=max(boost_nocharge-1,0)
 boost_invul_cur=max(boost_invul_cur-1,0)
 player.y-=player.dy
 player.x+=player.dx
 
 -- arena damage
 if not isinrange(player, 181) then
  if arena_cd <=0 then
	  player_damage(3)
	  arena_cd=25
	  sfx(7,1)
  end
 end
 arena_cd=max(arena_cd-1,0)
  
 -- shield
 if shield_nocharge <=0 then
  if shield_fullcharge then
   shield_fullcharge=false
   shield=shield_max
  else
   shield=min(shield+0.4,shield_max)
  end
 end
 shield_nocharge=max(shield_nocharge-1,0)
 shield_penalty=max(shield_penalty-0.001,shield_penalty_min)


-- _debugger_print("stage :"..boss.stage)
--
--for atk in all(boss.attack) do
-- _debugger_print("atk :"..atk.atk)
--end
-- _debugger_print("ba:"..boss_attack[1].dur)
-- _debugger_print("in arena:"..tostr(isinrange(player, 181)))
-- _debugger_print("x:"..player.x)
--	_debugger_print("y:"..player.y)
--	_debugger_print("shield:"..shield)
--	_debugger_print("shield_cd:"..shield_nocharge)
--	_debugger_print("spd:"..sqrt(player.dy^2+player.dx^2))
--	_debugger_print("sht:"..shoot_delay_cur)
--	_debugger_print("rtt:"..rot_target)
-- _debugger_print("rot:"..player.rot)

	
end


function player_energy_nocharge(consumed)
 energy-=consumed
 if energy <= 0 then
  boost_nocharge=boost_nocharge_amt*2
 else
  boost_nocharge=boost_nocharge_amt
 end
end

function isinrange(v,r)
 local midstep = r^2-v.y^2
 return abs(v.x)<r and abs(v.y)<r and midstep>0 and midstep-v.x^2>=0
end
function isclockwise(v1,v2)
 return -v1.x*v2.y+v1.y*v2.x>0
end
function player_lock()
 local range=80
 local spread=0.125
 local sec_end={
  x=sin(player.rot-spread)*range,
  y=-cos(player.rot-spread)*range
 }
 local sec_start={
  x=sin(player.rot+spread)*range,
  y=-cos(player.rot+spread)*range
 }
 if not player_locked then
	 for enemy in all(enemies) do
	  local relpoint={
	   x=enemy.x-player.x,
	   y=enemy.y-player.y
	  }
	  if (not isclockwise(sec_start,relpoint)) and isclockwise(sec_end,relpoint) and isinrange(relpoint,range) then
	  	lock_e=enemy
	  	player_locked=true
	  	return
	  end
	 end
	end
end

function player_shoot()
 add(player_bullets, {
  rot=player.rot,
  x=player.x,
  y=player.y,
  mag=1
 }) 
end
 
function special_1_create()
 add(special_1s,{
	 x=player.x+sin(player.rot)*9,
	 y=player.y-cos(player.rot)*9,
	 rot=player.rot,
	 mag=1
 })
end

function special_2_create()
 add(special_2s,{
	 x=player.x,
	 y=player.y,
	 dur=900,
 })
end

function special_3_activate()
 add(special_3s,{
	 x=player.x,
	 y=player.y,
	 mag=1,
	 t="special_3"
 })
 health=health_max
 shield=shield_max
 energy=energy_max
end

function player_damage(d)
 if boost_invul_cur <= 0 then
 
 	sfx(14,3)
	 if shield>=d then
	  shield-=d
	 else
	  d-=ceil(shield)
	  shield=0
	  health-=d
	  if health <=0 then
	--   local x,y = player.x,player.y
	--	  particle_create(x,y,6,9,19)
	--	  particle_create(x,y,4,9,19)
	--	  particle_create(x,y,9,9,19)
	--	  particle_create(x,y,0,9,4)
	   sfx(6)
	   _init()
	  end
	 end
	 if not shield_fullcharge then
		 if shield <= 0 then
		  shield_nocharge=shield_nocharge_amt*shield_penalty
		  shield_penalty=min(shield_penalty+1,shield_penalty_max)
		  shield_fullcharge=true
		 else
		  shield_nocharge=shield_nocharge_amt
		 end
	 end
 end
end

function enemy_damage(e,d)
 e.health-=d
 if e.health <= 0 then
  local x,y,r=e.x,e.y,e.r
  particle_create(x,y,6,r,r*2)
  particle_create(x,y,4,r,r*2)
  particle_create(x,y,9,r,r*2)
  particle_create(x,y,0,r,r)
  del(enemies,e)
  player_locked=false--cope
  sfx(6)
 end
end

function particle_create(x,y,col,amt,size)
 local area=amt^2
 local off=area/2
 for i=1,amt,1 do
 	add(particles,{x=x+rnd(area)-off,y=y+rnd(area)-off,col=col,age=rnd(size)})
 end
end

function particle_precise_create(x,y,col,size)
 add(particles,{x=x,y=y,col=col,age=size})
end

function player_add_special(a)
 function add_each(a,c,cm,q,qm)
  local diff=cm-c
  if diff>=a then
   c+=a
  else
   if q<qm then
   	c=a-diff
   	q=q+1
   else
    c=cm
   end
  end
  return {c,q}
 end
 special_1_charge,special_1=unpack(add_each(a,special_1_charge,special_1_charge_max,special_1,special_1_max))
 special_2_charge,special_2=unpack(add_each(a/2,special_2_charge,special_2_charge_max,special_2,special_2_max))
 special_3_charge,special_3=unpack(add_each(a/2,special_3_charge,special_3_charge_max,special_3,special_3_max))
end

function enemy_update()
 if boss.stage_max/boss.health_max*boss.health < boss.stage then
  add(boss.attack,boss_stall)
  boss.stage-=1
 end
 for atk in all(boss.attack) do
	 atk.hit(atk)
	 atk.dur-=1
	 if atk.dur < 0 then
	  local next_atk = rnd(3)\1+1
	  del(boss.attack, atk)
	  local t={}
	  for key, value in pairs(boss_attack[next_atk]) do
  		t[key] = value
			end
			t.init(t)
	  add(boss.attack, t)
	 end
	end
 for e in all(enemies) do
  if e.t=="chase" then
 	 e.dx*=0.975--friction
 	 e.dy*=0.975
 	 local rx,ry=e.x-player.x,e.y-player.y
 	 local angle=atan2(rx,ry)
 	 e.dx+=-cos(angle)*(0.12-e.r*0.01)
 	 e.dy+=-sin(angle)*(0.12-e.r*0.01)
   e.x+=e.dx
   e.y+=e.dy
   if isinrange({x=rx,y=ry},e.r+2) and boost_invul_cur <=0 then
	   del(enemies, e) 
	   player_damage(e.r*2.5)
	  end
  end
 end
end
-->8
-- input

function input_rot_target()
 local rot_target=0
	if btn(⬅️) and btn(⬆️) then
	 rot_target=0.125
	elseif btn(⬅️) and btn(⬇️) then
	 rot_target=0.375
	elseif btn(➡️) and btn(⬆️) then
	 rot_target=0.875
	elseif btn(➡️) and btn(⬇️) then
	 rot_target=0.625
	elseif btn(⬇️) then
	 rot_target=0.5
	elseif btn(⬅️) then
	 rot_target=0.25
	elseif btn(➡️) then
  rot_target=0.75
	elseif btn(⬆️) then
	 rot_target=1
	end
 return	rot_target
end

function input_moving()
 return btn(⬅️) or btn(➡️) or btn(⬆️) or btn(⬇️)
end

function input_boost()
 return btn(❎)
end

function input_boostp()
 return btnp(❎)
end

function input_shoot()
 return btn(🅾️)
end

function input_shootp()
 return btnp(🅾️)
end
-->8
-- draw

function player_draw()
 pal(15,player_color())
 local s = flr(56-(player.rot%1)*24+0.5)
 local offx = 0
 local offy = 0
 if s==45 or s==46 or s==54 or s==55 then
  offx=1
 elseif s==33 or s==34 or s==42 or s==43 then
  offx=-1
 elseif s==36 or s==37 or s==51 or s==52 then
  offy=1
 elseif s==39 or s==40 or s==48 or s==49 then
  offy=-1
 end
 spr(s,player.x-4+offx, player.y-4+offy, 1,1)
 pal()

 -- health
 rectfill(player.x-8,player.y-8,player.x-8+health\5,player.y-8-0,11)
 if shield >0 then
 	rectfill(player.x-8+(health_max\5),player.y-8,player.x-8+(health_max\5)+shield\5,player.y-8-0,12)
 end
 
 -- charging
 if special_hold_dur < 41 then
  spr(min(special_hold_dur+63,84),player.x+sin(player.rot)*9-4, player.y-4-cos(player.rot)*9,1,1)
 elseif special_hold_dur < 61 then
  spr(128,player.x-16, player.y-16,4,4)
 end
end

function player_color()
 if boost_invul_cur > 0 then
  return 8
 elseif input_boost() and energy>0 then
  return 9
 end
 return 15
end

function ui_draw()
 local e = energy
 local height = 111
 local l = 3
 local l_small = 1
 local w = 4
 local pos_y = 0
 local pos_x = 120
 local col = 10
 if (e <= 25) col=8

 while e >= 5 do
  height -= l
  rectfill(pos_x+cam_x,pos_y+l+height+cam_y,pos_x+w+cam_x,pos_y+height+cam_y, col)
  height-=2
  e-=5
 end
 
 while e > 0 do
  line(pos_x+cam_x,pos_y+height+cam_y,pos_x+w+cam_x,pos_y+height+cam_y, col)
  height -= l_small
  e-=2
 end
 
 -- special
 local s1,s2,s3=special_1+3,special_2+3,special_3+3 
 function special_draw(x,col,l,pic,num)
  local x8,cy=cam_x+x+8,cam_y+116
  if l>0 then
	  rectfill(
	  x8,
	  cy,
	  x8+flr(l+0.5),
	  cy+7,
	  col
	 )
	 end
	 spr(pic,cam_x+x,cy,1,1)
	 spr(num,x8,cy,1,1)
 end
 special_draw( 0,12,special_1_charge,19,s1)
 special_draw(33,11,special_2_charge,20,s2)
 special_draw(76, 8,special_3_charge,21,s3)
end

function enemy_draw()
 for enemy in all(enemies) do
  local c=8
  if enemy.t=="chase" then
  	rect(enemy.x-enemy.r,enemy.y-enemy.r-2,enemy.x+ceil((enemy.r*2)/enemy.health_max*enemy.health)-enemy.r,enemy.y-enemy.r-2,11)
  else
  	rectfill(cam_x+4,
  	cam_y,
  	cam_x+ceil(120/enemy.health_max*enemy.health),
  	cam_y+3,8)
  	c=2
  end
  circfill(enemy.x, enemy.y,enemy.r,c)
  circfill(enemy.x, enemy.y,enemy.r-1,0)

 end
 
 for atk in all(boss.attack) do
  atk.draw(atk)
 end

end


function player_bullet_draw()
 function draw(arr,size)
  for b in all(arr) do
  local c=7
  if (b.mag==2) c=8
   circfill(b.x, b.y,size,c)
  end
 end
 draw(player_bullets,1)
 draw(special_3s,24)

 for s in all(special_1s) do
  if s.mag==2 then
   pal(11,15)
   pal(3,14)
   pal(1,2)
  end
  spr(84,s.x-4, s.y-4,1,1)
  if (s.mag==2) pal()
 end
 for s in all(special_2s) do
  spr(128,s.x-16, s.y-16,4,4)
 end
end

function arena_draw()
 circfill(0,0,181,1)
 circfill(-1,-1,178,0)
 fillp(65535-(2^(flr(cam_x)%4)*16^(flr(cam_y%4))))
 for l in all(arena_lines) do
  line(l[1],l[2],l[3],l[4],1)
 end
 fillp()

end

function particle_draw()
 for p in all(particles) do
  circfill(p.x, p.y,p.age,p.col)
  p.age-=0.25
  if p.age < 0 then
   del(particles,p)
  end
 end
end

-->8
-- debugger
function _draw_debugger()
 local index=0
 for _print in all(debugger.prints) do
  print(_print.msg, 0+cam_x, index*6+cam_y, _print.col)
   del(debugger.prints, _print)
  index+=1
 end
end

function _debugger_print(_msg)
    add(debugger.prints,{msg=" ".._msg,col=7})
end

function _debugger_error(_msg)
    add(debugger.prints,{msg="*".._msg.."*",col=8})
end

function _debugger_warning(_msg)
    add(debugger.prints,{msg=">".._msg.."<",col=10})
end

function _init_debugger()
 debugger={
  prints={
   {
    msg="debugger started sucessfully!",
    cooldown=time_on_sceen,
    col=7,
   }
  },
 }
end
-->8
--[[ todo


boss?
-fillp
- sector attack
- chasing enemy spawn
- rotating lasers


]]
__gfx__
0000000000000000060000000066650000665000006665000066650000000d500001d5000000d5000005d000100f0000000ee00000e00000100e000000100000
00000000000000000600000006500650000650000650065006500650000066d0001d6d00000d6d00005d6d0015150000001eed0015e511e015e500000151e000
0070070000000000066000000650065000065000065006500650065005d67765005676000056760000d676001551d5f0005ee6001de5de1105e155e0005e1000
000770000000000006600000065006500006500000006500000665005ddd66d000d6760001d6760000d67600015d6d1100dee6000ded5e510e66de1100edd5e0
0007700000000000066600000650065000065000000650000000065015d5dd50155d6dd0555d6dd005dd6d501dd67d5101ed6e500e76e1006e7de51105e65e10
007007000000000006660000065006500006500000650000065006500115555115d5ddd115d5ddd11d5dddd51567d50015e5ded50e7e5000e7de10005e7ee511
000000000000000006666000065006500006500006500000065006500000151001511d5501511d1115515d511d65000011e11e510ede0000e6e10000e7e10010
00000000010000010666600000666500006665000666665000666500000001100100010001001000001001005d00000000e00e000ee00000de0000005e100000
00000000006666600666660000011000002ee20000001a10000000000000000000000000051000000000005d00000000000005d0001005000000051000100000
000000000066666006666600001331000efaafe000004a40000000000000000000000000015d00000000156d00000000000156d0115d6d510000dd500111f000
000000000066660000666600003aa3002fa77af20000979000000000000000000000000015dd676000055d7d000000000155d7d0155676d505dd66d500515000
00000000066660000006666001b77b10ea7777ae0000f7f0000000000000000000000000015dd6dd0111d7d500000000111d7d5005d676d05dd6776000155df0
00000000066600000000666003b77b30ea7777ae149fa7af00000000000000000000000001d5ddd5111d66d50000000001d66d50005d6d00155d66d0015dd7d0
00000000066000000000066013a77a312fa77af2aa777777000000000000000000000000115d551000151d51000000000151d5100015dd000115d55115d676d1
0000000006000000000000603ba77ab30efaafe0149fa7af000000000000000000000000015100000f0051d500000000f0051d510015d5000000551015d60050
0000000000000000000000001a7777a1002ee2000000f7f0000000000000000000000000011000000000f00100000000000f001000015000000001105d500000
0005d000000005d00000005d000001551110115d01100000015000000015000000015000000001000000f00100000f0000f00f0000f00000100f000000100000
001d6d0000005d600000156d01001d7d01515d75055dd66d05d500000f1d000000f5d000000f1110000056550f15d6d1115d6d511151d5f0151500000111f000
005676000005d76000115d751151576505156750f1d677d5fddd66d00155d000005d6d00000576000f15d76d115d6765155676d51515d6511551d5f000511000
00d67600001d67d01555d7d101156d50f11d6510055d651001d6776d01567d00005676000f1d6700115dd67015d5676005d676d0015d7751015d6d110015d5f0
015d6d501555d6d0115d66d00f5dd500005d510001d55500015d66d5055d6760f11dd760011567d015155d650015dd60005d6d0005d67d001dd67d5101d66710
15d5ddd5115d5dd10f151d51000155000051510001511000f5d5d510f1155d6d05155dd01151d66d001155dd00055dd00015dd000156d0001567d5001d677611
11511d510f11515100005151000f151000f510000f1500000151000005115151015155dd01001dd50000115d00001d500015d50001dd00001d6500005d6d0010
00f00f0000000f000000f00100000100000110000011000001100000011000001110015100000151000000150000015000015000015000005d00000015d00000
000110000000110000000110000005105dd50d5115d00000dd5101110d5000000005d00000000000000000000000000000000000000000000000000000000000
00051f00000051f00000551055d666d015d676505d6d0010567dd55006d50000001d6d0000000000000000000000000000000000000000000000000000000000
001151000001d5100115d55f1ddd776f015d67601d67761105d76d10067d50000056760000000000000000000000000000000000000000000000000000000000
0015d50000555d50155d66d0015d66d00155dd5f01d66710015d615f0d76d10000d6760000000000000000000000000000000000000000000000000000000000
0155dd5f015d66d05dd6776000555d500015d5000015d5f00015d5000d6d5551015d6d5000000000000000000000000000000000000000000000000000000000
015d67601ddd776f05dd66df0001d5100011510000511000001551001dd5d51115d5ddd500000000000000000000000000000000000000000000000000000000
15d6765055d666d00000dd50000051f000051f000111f00000051f00151511f011511d5100000000000000000000000000000000000000000000000000000000
5dd50d5100000510000005100000110000011000001000000001100000f0000000f00f0000000000000000000000000000000000000000000000000000000000
0110000001100000010000000000000000000000000000000000000000000b000000bb00000bbb00000bbb00000bbb00000bbb00000bbb00000b000000000000
1001000010000000100000000000000000000000000000000000003000000030000000300000003000b0003000b0003000b0003000b0000000b0000000baa000
10000110100001101003311010033110000331100003311300033113000331030003300300030003000000030a0000030a0000000a00a0000a0aa0000aa77a00
01000001010030010100000101300001013000310030003100300030003000300030003000300030003000300000000000a00a0000aaaa0000a77a0000a77a00
0011000100100001001000010010003103100031031000300300003003000030030000300300003003000000030000a0000000a0000a00a0000aa0a000a77aa0
0000000100033001000333010003330100033300030333000303330003003300030003000300000003000b0003000b0003000b0000000b0000000b00000aab00
0000001000000010000000100000000000000000000000000b0000000b0000000b0000000b00b0000b00b0000b00b0000b00b0000b00b0000000b0000000b000
0000110000000100000000000000000000000000000000000000000000b0000000bb000000bb000000bb000000bb000000bb000000bb0000000b000000000000
00000000000b0000001b11000013311000133100002ee20000133100000000888888888800000000000000000000000000000000000000000000000000000000
00baa00000baab0001baab1003baa31103baab300efaafe003baab30000008888888888800000000000000000000000000000000000000000000000000000000
0aa77a000aa77ab00aa77ab01ba77ab11ba77ab12fa77af21ba77ab1000088888888888800000000000000000000000000000000000000000000000000000000
00a77a000ba77ab01ba77ab03b7777a33a7777a3ea7777ae3a7777a3000888888888888800000000000000000000000000000000000000000000000000000000
00a77aa00ba77aa03ba77aa01a7777a13a7777a3ea7777ae3a7777a3088888888888880000000000000000000000000000000000000000000000000000000000
000aab0000777a001aaaaa113ba77aa11ba77ab12fa77af21ba77ab1888888888888000000000000000000000000000000000000000000000000000000000000
0000b0000000ab000baaba0033babb3103baab300efaafe003baab30888888888880000000000000000000000000000000000000000000000000000000000000
000000000000000000333300033b311000133100002ee20000133100888888888800000000000000000000000000000000000000000000000000000000000000
000000000022eeeeeeee220000000000000000000013510000000000888888888000000000000000000000000000000000000000000000000000000000000000
0000002eeeffffffffffffeee20000000000000003cbfc3000000000888888888000000000000000000000000000000000000000000000000000000000000000
00002effffaaaaaaaaaaaaffffe20000000000001cf77fc100000000888888880000000000000000000000000000000000000000000000000000000000000000
000effaaaa777777777777aaaaffe000000000005f7777b300000000888888800000000000000000000000000000000000000000000000000000000000000000
02efaa7777faaaaaaaaaaf7777aafe20000000003b7777f500000000888888800000000000000000000000000000000000000000000000000000000000000000
0efa77aaafeeeeeeeeeeeefaaa77afe0000000001cf77fc100000000888888800000000000000000000000000000000000000000000000000000000000000000
2fa7afeee21111111111112eeefa7af20000000003cfbc3000000000888888800000000000000000000000000000000000000000000000000000000000000000
20000000000000000000000000000002000000000015310000000000888888800000000000000000000000000000000000000000000000000000000000000000
20000000000000000000000000000002777777777777777777777777777777770000000000000000000000000000000000000000000000000000000000000000
2fa7afeee21111111111112eeefa7af2000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0efa77aaafeeeeeeeeeeeefaaa77afe0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
02efaa7777aaaaaaaaaaaf7777aafe20000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000effaaaa777777777777aaaaffe000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00002effffaaaaaaaaaaaaffffe20000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000002eeeffffffffffffeee2000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000022eeeeeeee220000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000115dd6666dd511000000000000000000115dd6600000000000000000000000000000000000000000000000000000000000000000000000000000000
000000005d6d77777777d6d500000000000000005d6d500000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000005d6507777667777056d50000000000005d6500000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000d65007777600677770056d0000000000d650000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000d6d006777600006777600d6d00000000d6d00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000d6d6000777d0000d7770006d6d000000d6d000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0056d77d0007750000577000d77d65000056d0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00d57776000060000006000067775d0000d500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
05677777076007600670067077777650056000000000066600000000000000000000000000000000000000000000000000000000000000000000000000000000
1d5d666d0770760000670770d666d5d11d5000000006600000000000000000000000000000000000000000000000000000000000000000000000000000000000
16000000007000000000070000000061160000000060000000000000000000000000000000000000000000000000000000000000000000000000000000000000
5d0000670000000000000000760000d55d0000000600000000000000000000000000000000000000000000000000000000000000000000000000000000000000
d500000676000000000000676000005dd50000000600000000000000000000000000000000000000000000000000000000000000000000000000000000000000
d7600d00600000000000000600d0067dd00000006000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
67760660000000000000000006606776600000006000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
67777777700000000000000777777776600000006000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
67777777700000000000000777777776000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
67760660000000000000000006606776000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
d7600d00600000000000000600d0067d000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
d500000676000000000000676000005d000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
5d0000670000000000000000760000d5000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
16000000007000000000070000000061000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1d5d666d0770760000670770d666d5d1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
05677777076007600670067077777650000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00d57776000060000006000067775d00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0056d77d0007750000577000d77d6500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000d6d6000777d0000d7770006d6d000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000d6d006777600006777600d6d0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000d65007777600677770056d00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000005d6507777667777056d5000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000005d6d77777777d6d500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000115dd6666dd511000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__label__
00008888888888888888888888888888888888888888888888888888888888888888778888888888888888888888888000000000000000001000000000000000
00008888888888888888888888888888888888888888888888888888888888888888777888888888888888888888888000000000000000000000000000000000
00008888888888888888888888888888888888888888888888888888888888888888787888888888888888888888888000000000000000000000000000000000
00008888888888888888888888888888888888888888888888888888888888888888877888888888888888888888888000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000008877788000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000870788000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000887780800000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000887778800000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000087078800000000000000000100000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000088778080000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000088777880000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000008707880000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000008877808000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000088777880000000000000000000000000000000000000000000aaaaa000
000000000000000000000000000000000000000000000000000000000000000000000008707880000000000000000000000000000000000000000000aaaaa000
000000000000000000000000000000000000000000000000000000000000000000000008877808000000000000000000000000000000000000000000aaaaa000
000000000000000000000000000000000000000000000000000000000000000000000008877788000000000000000000000000000000000000000000aaaaa000
00000000000000000000000000000000000000000000000000000000000000000000000087078800000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000887780800000000000000000000000000000000000000000aaaaa000
000000000000000000000000000000000000000000000000000000000000000000000000887778800000000000000000000000000000000000000000aaaaa000
000000000000000000000000000000000000000000000000000000000000000000000000087708800000000000000000000000000000000000000000aaaaa000
000000000000000000000000000000000000000000000000000000000000000000000000088778080000000000000000000000000000000000000000aaaaa000
00000000000000000000000000000000000000000000000000000000000000000000000008877788000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000008770880000000000000000000000000000000000000000aaaaa000
000000000000000000000000000000000000000000000000000010000000000000000000008877880000000000000000000000000000000000000000aaaaa000
000000000000000000000000000000000000000000000000000000000000000000000000008877788000000000000000000000000000000000000000aaaaa000
000000000000000000000000000000000000000000000000000000000000000000000000008077088000000000000000000000000000000000000000aaaaa000
00000000000000000000000000000000000000000000000000000000000000000000000000088778800000000000000000000000000000000000000000000000
000000000000000000000000100000000000000000000000000000000000000000000000000887778800000000000000000000000000000000000000aaaaa000
000000000000000000000000000000000000000000000000000000000000000000000000000807778800000000000000000000000000000000000000aaaaa000
000000000000000000000000000000000000000000000000000000000000000000000000000087078800000000000000000000000000000000000000aaaaa000
000000000000000000000000000000000000000000000000000000000000000000000000000088777880000000000000000000000000000000000000aaaaa000
00000000000000000000100000000000100000000000000000000000000000000000000000008077788000000000000000000000000000000000100000000000
000000000000000000000000000000000000000000000000000000000000000000000000000008707880000000000000000000000000000000000000aaaaa000
000000000000000000000000000000000000000000000000000000000000000000000000000008877788000000000000000000000000000000000000aaaaa000
000000000000000000000000000000000000000000000000000000000000000000000000000008077788000000000000000000000000000000000000aaaaa000
000000000000000010001000000000000000000000000000000000000000000000000000000000870788000000000000000000000000000000000000aaaaa000
00000000000000000000000000000000000000000000000000000000000000000000000000000088777880000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000807778800000000000000000000000000000000000aaaaa000
000000000000000000000000000000000000000000000000000000000000000000000000000000087078800000000000000000000000000000000000aaaaa000
000000000000100000000000000000000000000000000000000000000000000000000000000000088778080000000000000000001000000000000000aaaaa000
000000000000000000000000000000000000000000000000000000000000000000000000000000088777880000000000000000000000000000000000aaaaa000
00000000000000000000000000000000000000000000000000000000000000000000000000000000870788000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000008877808000000000000000000000000000000000aaaaa000
100000000000000000000000000000000000000000000000000000000000000000000000000000008877788000000000000000000000000000000000aaaaa000
000000000000000000000000000000000000000000000000000000000000000000000000000000000870788000000000000000000000000000000000aaaaa008
000000000000000000000000000000000000000000000000000000000000000000000000000000000887780800000000000000000000000000000000aaaaa888
00000000000000000000000000000000000000000000000000000000000000000000000000000000088777880000000000000000000000000000000088808877
000000000000000000000000000000000000000000000000000000000000000000000000000000000087708800001000000000000000000000000888aaaaa777
000000000000000000000000000000000000000000000000000000000000000000000000000000000088778080000000000000000000000000888087aaaaa707
000000000000000000000000000000000000000000000000000000000000000000000000000000000088777880000000000000000000000888087770aaaaa888
000000000000000000000000000000000000000000000000000000000000000000000000000000000008772882222000000000000000888087770777aaaaa888
0000000000000000000000000000000000000000000000000000bbbbbbb000cccccc000000000000000887780800222000000000088888777077777888888000
000000000000000000000000000000000000000000000000000000000000000000000000000000000008877788000022000000888887770777778888aaaaa000
000000000000000000000000000000000000000000000000000000000000000000000000000000000020877088000000200888887770777778888880aaaaa000
000000000000000000000000000000000000000000000000000000000000000000000000000000000200887780800000888887770777788888880000aaaaa000
000000000000000000000000000000000000000000000000000000000150000000013310000000002200887778800888887777777788808880000000aaaaa000
0000000000000000000000000000000000000000000000000000000005d50000003baab300000000200008770888888777777078880888000000000000000000
00000000000000000000000000000000000000000000000000000000fddd66d001ba77ab100000022000088778887777772788808880000000000000aaaaa000
0000000000000000000000000000000000000000000000000000000001d6776d03a7777a300000020008888777887770788808880000000000000000aaaaa000
00000000000000000000100000000000000000000000000000000080015d66d503a7777a300000028880877777880788808880000000000000000000aaaaa000
00000000000000000000000000000000000000000000000000090888f5d5d51001ba77ab100008880877707777888808880200000000000000000000aaaaa000
0000000000000000000000000000000000000000000000000099988001510000003baab300888087770777778888888000020000000000000000000000000000
000000000000000000000000000000000000000000000000099999a00110000000013318880877727777788888888000000200000000000000000000aaaaa000
00000000000000000000100000000000000000000000100009999aaa0000000000008880877707777788888870788000002200000000000000000000aaaaa000
000000000000000000000000000000000000000000000000a99999a00000000008880877777777788888800887778800002000000000000000000000aaaaa000
0000000000000000000000000000000000000000000000000a9990000000008888877777707788888800000807778800022000000000000000000000aaaaa000
000000000000000000000000000000000000000000000000a0aaa000000888887777770778888880020000115dd6666dd5110000000000000000000000000000
000000000000000000000000000000000000000000000000899a9900888887777770778888880000002005d6d77777777d6d50000000000000000000aaaaa000
000000000000000000000000000000000000000000000008899998888877777707888888800000000005d6507777667777056d500000000000000000aaaaa000
0000000000000000000000000000000000000000000000998888887777777078880888000000000000d65227777678677770056d0000000000000000aaaaa000
0000000000000000000000000000000000000000000000888a8777077707888088800000000000000d6d006777677786777600d6d000000000000000aaaaa000
00000000000000000000000000000000000000000008889877707777788808880000000000000000d6d6000777d7778d7770006d6d0000000000000000000000
000000000000000000000000000000000000000088808777077777888088800000000000000000056d77d0007757078577000d77d650000000000000aaaaa000
0000000000000000000000000000000000000888087777777778880888000000000000000000000d57776000068877786000067775d0000000000000aaaaa000
000000000000000000000000000000000088808777777077888888800000000000000000000000567777707600767767806707777765000000000000aaaaa000
000010000000000000000000000000088808777777077888888000000000000000000000000001d5d666d0770768770670770d666d5d100000001000aaaaa000
00000000000000000000000000008880877777707788888800000000000000000000000000000160000000070008877788700000000610000000000000000000
000000000000000000000000088808777777077888888000000000000000000000000000000005d0000670000008077788000760000d500000000000aaaaa000
00000000000000000000008880877777707788888800000000000000000000000000000000000d500000676000008770880676000005d00000000000aaaaa000
00000000000000001008888777777707788888801000100010001000100010001000100000000d7600d00600000088777880600d0067d00000000000aaaaa000
000000000000000088887770777077888888000000000000000000000000000000000000000006776066000000008077788000660677600000000000aaaaa000
00000000000008888777077777788888800000000000000000000000000000000000000bbbbbb677777777bbbb00087708807777777760000000000000000000
000000000888887770777778888888000000000000000000000000000000000000000000000006777777770000000887780877777777600000000000aaaaa000
000000888087777777778880888000000000100000001000000000000000000000000000000006776066000000000887778800660677600000000000aaaaa000
00088808777777077888088800000000000000009000000000000000000000000000000000000d7688d00600000000877088600d0067d00000000000aaaaa000
88808777777077888088800000000000000000000000000000000000000000000000000000008d500008676000000088778676000005d00000000000aaaaa000
087777770778880888000000000000000000000000000000000000000000000000000000000805d0000678000000008877788760000d50000000000000000000
777770778888888000000000000000000000000000000000000000000000000000000000008001600000008700000008777880000006100000000000aaaaa000
770778888880000000000000000000000000000000000000000000000000000000000000080001d5d666d0770760000677770d666d5d100000000000aaaaa000
778888880000000000000000000000000000000000000000000000000000000000000000080000567777707600760067876787777765000000000000aaaaa000
8888800000000000000000000000000000000000000000000000000000000000000000008000000d57776000860000006770867775d0000000000000aaaaa000
880000000000000000000000100000000000000000000000000000000000000010000000800000056d77d0007750000577778d77d65000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000080000000d6d6000777d0000d7777786d6d00000000000000aaaaa000
000000000000000000000000000000000000000000000000000000000000000000000000800000000d6d006777600006777678d6d000000000000000aaaaa000
0000000000000000000000000000000000000000000000000000000000000000000000008000000000d65007777600677770756d0000000000000000aaaaa000
000000000000000000000000000000000000000000000000000000000000000000000000080000000005d6587777667777856d580000000000000000aaaaa000
00000000000000000000000000000000000000000000000000000000000000000000000008000000000005d6d77777777d6d5788000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000800000000000115dd6666dd51107880000000000000000aaaaa000
000000000000000000000000000000000000000000000000000000000000000000000000000800000000080000000000008877788000000000000000aaaaa000
000000000000100000000000000000000000000000000000000000000000000000000000000088000008800000000000008077788000000000000000aaaaa000
000000000000000000000000000000000000000000000000000000000000000000000000000000888880000000000000000870788000000000000000aaaaa000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000088777880000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000807778800000000000000aaaaa000
000000000000000000000000000000000000000000000000000000000000000000001000100000000000000000000000000087708800000000000000aaaaa000
0000000000000000000000000000000000000000000000000000bbbbbbbbbbbbbbb00000000000000000000000000000000088777880000000000000aaaaa000
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000080777880000000000000aaaaa000
00000000000000000000000000000000000000000000000000000000088888000000000000000000000000000000000000000877088000000000000000000000
100000000000000000000000000000000000000000000000000000008000008000000000100000000000000000000000000008877788000000000000aaaaa000
000000000000000000000000000000000000000000000000000000080000000800000000000000000000000000000000000008077788000000000000aaaaa000
000000000000000000000000000000000000000000000000000000800000000080000000000000000000000000000000000000877088000000000000aaaaa000
000000000000000000000000000000000000000000000000000008000000000008000000000000000000000000000000000000887778800000000000aaaaa000
00000000000000000000000000000000000000000000000000000800000000000800000000000000000000000000000000000080777880000000000000000000
00000000000000000000000000000000000000000000000000000800000000000800000000000000000000000000000000000008770880000000000000000000
00000000000000000000000000000000000000000000000000000800000000000800000000000000000000000000000000000008877788000000000000000000
00000000000000000000000000000000000000000000000000000800000000000800000000000000000000000000000000000008077788000000000000000000
00011000cc665ccccccccc00000000000002ee200bb665bbb00000800000000080000000000000001a1088665888888888888888888888880000000000000000
00133100ccc65ccccccccc000000000000efaafe0bbb65bbb00000080000000800000000000000004a4088865888888888888888888888880000000000000000
003aa300ccc65ccccccccc000000000002fa77af2bbb65bbb0000000800000800000000000000000979088865888888888888888888888880000000000000000
01b77b10ccc65ccccccccc00000000000ea7777aebbb65bbb0000000088888000000000000000000f7f088865888888888888888888888880000000000000000
03b77b30ccc65ccccccccc00000000000ea7777aebbb65bbb000000000000000000000000000149fa7af88865888888888888888888888880000000000000000
13a77a31ccc65ccccccccc000000000002fa77af2bbb65bbb000000000000000000000000000aa77777788865888888888888888888888880000000000000000
3ba77ab3ccc65ccccccccc000000000000efaafe0bbb65bbb0000000000000bbbbbbbbbbbbbb149fa7af88865888888888888888888888880000000000000000
1a7777a1cc6665cccccccc00000000000002ee200bb6665bb0000000000000000000000000000000f7f088666588888888888888888888888000000000000000
0000000000000000000000000000000000000000bbbbbbbbbbbb0000000000000000888880000000000000000000000000000000008077788000000000000000
00000000000000000000000000000000000000000000000000000000000000000088000008800000000000000000000000000000000877788000000000000000
00000000000000000000000000000000000000000008888800000000000000000880000000880000000000000000000000000000000870780800000000000000
00000000000000000000000000000000000000000088000880000000000000008800000000088000000000000000000000000000000887778800000000000000

__map__
9561626364640101010101010101010100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
6495646464640101010101010101010100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
6495956464640101010101010101010100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
6464959595010101010101010101010100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0101010195959501010101010101010100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0101010101019501010101010101010100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0101010101010195010101010101010100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0101010101010195950101010101010100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0101010101010101010101010101010100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0101010101010101010101010101010100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0101010101010101010101010101010100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0101010101010101010101010101010100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0101010101010101010101010101010100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0101010101010101010101010101010100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0101010101010101010101010101010100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0101010101010101010101010101010100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__sfx__
c60100000b6200d62011620166201c63022640286402d65031650346503565035650356503465033650336503265031640306403064030630306302f6302f6302f6303063030630316303163031630306302f630
4802000032651346713667137661376513665133641326412f6412a63126631226311c6311862115621136210f6210d6210b6210a621086210762106611056110461103611026110261101611006110061100611
d601000012620106200e6200d6200c6200b6200a62009620076200662006620056200462004620036200362003620036200362003620036200462004620046200662008620096200a6200b6200c6200d6200e620
01010000075100e610136101051012510096100f6101f500216002c60008600076000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
5a0100003a4413844134441326212f1412d1412c1412b141287412874126741267410000100001000010000100001000010000100001000010000100001000010000100001000010000100001000010000100001
930100003064010630006000060002600016000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
9204000029660236601a660136600e6600c6600a66009660076600666005650046500365002650026400164000640006300063000630006300062000620006200062000610006100061000000000000000000000
4a020000276502b65019650146501c6501d1501b6501015017650166500a150136500715011650106500e6500c650003000030000000000000000000000000000000000000000000000000000000000000000000
900600000a7510a7510b7510d7510f751127511575118751197511b7511c7511e7512075122751237512475125751287512b7512d751317513175131751317513175131751317513175131751317513175131751
005600000a72102021210111e0111b01117011170111601115011140111301112011110110f0110f0110205102051020510205102051020510205102051020510205102051020510205102051020510205102051
000600000655106551095510b5510c5510e5510f55111551125511455116551185511b5511d5511f5512255124551275512a5512d551315513155131551315513155131551315513155131551315513155131551
9106000038751337512e751277511d751137510a75104751007510075100751027510075100751007010070100701007010070103701007010070100701007010070100701000010000100001000010000100001
005600001402113021110110f0110e0110c0110b0110a0110a0110901108011070110701102011020110201102011020110201102011020110201102011020110201102011020110201102011020110001100011
0302000032651346713667137661376513665133641326412f6412a63126631226311c6311862115621136210f6210d6210b6210a621086210762106611056110461103611026110261101611006110061100611
4a0200000ff5019f5022f502af5019f5013f500ef500cf500bf500cf500df500af5009f5011600106000e6000c600003000030000000000000000000000000000000000000000000000000000000000000000000
__music__
00 08090a44

